// Code generated by MockGen. DO NOT EDIT.
// Source: gofeedparser.go

// Package mock_parser is a generated GoMock package.
package mock_parser

import (
	gomock "github.com/golang/mock/gomock"
	gofeed "github.com/mmcdole/gofeed"
	reflect "reflect"
)

// MockGofeedParser is a mock of GofeedParser interface
type MockGofeedParser struct {
	ctrl     *gomock.Controller
	recorder *MockGofeedParserMockRecorder
}

// MockGofeedParserMockRecorder is the mock recorder for MockGofeedParser
type MockGofeedParserMockRecorder struct {
	mock *MockGofeedParser
}

// NewMockGofeedParser creates a new mock instance
func NewMockGofeedParser(ctrl *gomock.Controller) *MockGofeedParser {
	mock := &MockGofeedParser{ctrl: ctrl}
	mock.recorder = &MockGofeedParserMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockGofeedParser) EXPECT() *MockGofeedParserMockRecorder {
	return m.recorder
}

// ParseURL mocks base method
func (m *MockGofeedParser) ParseURL(feedURL string) (*gofeed.Feed, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ParseURL", feedURL)
	ret0, _ := ret[0].(*gofeed.Feed)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ParseURL indicates an expected call of ParseURL
func (mr *MockGofeedParserMockRecorder) ParseURL(feedURL interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ParseURL", reflect.TypeOf((*MockGofeedParser)(nil).ParseURL), feedURL)
}
